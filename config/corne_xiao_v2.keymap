#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#include "zmk-helpers/helper.h"

#define ___ &trans

ZMK_UNICODE_SINGLE(EURO, N2, N0, A, C)
ZMK_UNICODE_SINGLE(diae, N0, N3, N0, N8)
ZMK_UNICODE_SINGLE(circum, N0, N3, N0, N2)
ZMK_UNICODE_SINGLE(acc_gra, N0, N3, N0, N0)
ZMK_UNICODE_SINGLE(acc_acu, N0, N3, N0, N1)

// reuse basic mod-morph scheme
#define SIMPLE_MORPH(NAME, MOD, BINDING1, BINDING2) \
    ZMK_MOD_MORPH(NAME, \
        mods = <(MOD_L ## MOD|MOD_R ## MOD)>; \
        bindings = <BINDING1>, <BINDING2>; \
    )

#define QUICK_TAP_MS 175

&lt {  // layer-tap config
    flavor = "balanced";
    tapping-term-ms = <200>;
    quick-tap-ms = <QUICK_TAP_MS>;
};

/* Home row mods */
/* use helper macros to define left and right hand keys */
#include "zmk-helpers/key-labels/42.h"                                      // key-position labels
#define KEYS_L LT0 LT1 LT2 LT3 LT4 LM0 LM1 LM2 LM3 LM4 LB0 LB1 LB2 LB3 LB4  // left-hand keys
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RM0 RM1 RM2 RM3 RM4 RB0 RB1 RB2 RB3 RB4  // right-hand keys
#define THUMBS LH2 LH1 LH0 RH0 RH1 RH2

#define MAKE_HRM(NAME, HOLD, TAP, TRIGGER_POS) \
ZMK_HOLD_TAP(NAME, \
    flavor = "balanced"; \
    tapping-term-ms = <280>; \
    quick-tap-ms = <QUICK_TAP_MS>; \
    require-prior-idle-ms = <50>; \
    bindings = <HOLD>, <TAP>; \
    hold-trigger-key-positions = <TRIGGER_POS>; \
    hold-trigger-on-release; \
)

MAKE_HRM(hml, &kp, &kp, KEYS_R THUMBS)  // left-hand HRMs
MAKE_HRM(hmr, &kp, &kp, KEYS_L THUMBS)  // right-hand HRMs
/* Home row mods */

ZMK_LAYER(base,
//╭──────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮      ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────╮
    &kp ESC    &kp Q         &kp W         &kp F          &kp P          &kp G                &kp J         &kp L         &kp U         &kp Y         &kp SEMI    &kp BSPC
//├──────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤      ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────┤
    &kp TAB    &hml LGUI A   &hml LALT R  &hml LSHFT S   &hml LCTRL T  &kp D                &kp H         &hmr LCTRL N  &hmr LSHFT E  &hmr LALT I   &hmr LGUI O   &kp SQT
//├──────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤      ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────┤
    &kp X  &kp Z         &kp X         &kp C         &kp V         &kp B &kp &none &none &kp K        &kp M          &kp COMMA     &kp DOT       &kp FSLH     &kp RET
//╰──────────┴─────────────┼─────────────┴─────────────┼─────────────┼─────────────┤      ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────┴─────────╯
                                                         &kp LGUI &mo 1 &kp SPACE            &kp SPACE &mo 2 &kp X
//                                                     ╰─────────┴───────┴─────────╯      ╰───────────┴─────┴─────────╯
)

ZMK_LAYER(lower,
//╭──────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮      ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────╮
    &kp TILDE    &kp EXCL      &kp AT       &kp LPAR       &kp RPAR      &kp PRCNT            &circum         &kp N7        &kp N8       &kp N9      &kp MINUS  &kp BSPC
//├──────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤      ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────┤
    &kp AMPS     &kp HASH      &kp DLLR     &kp LBKT       &kp RBKT      &kp ASTRK            &acc_acu        &kp N4        &kp N5       &kp N6      &kp PLUS   &kp EQUAL
//├──────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤      ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────┤
    &kp CAPS     &kp DEL       &EURO        &kp LBRC       &kp RBRC      &diae &kp &none &none &acc_gra       &kp N1        &kp N2       &kp N3      &kp BSLH   &kp RET
//╰──────────┴─────────────┼─────────────┴─────────────┼─────────────┼─────────────┤      ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────┴─────────╯
                                                         &kp LGUI &kp 1 &kp SPACE            &kp SPACE &mo 2 &kp DOT
//                                                     ╰─────────┴───────┴─────────╯      ╰───────────┴─────┴─────────╯
)

//
ZMK_LAYER(raise,
//╭──────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮      ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────╮
        ___      &kp F1      &kp F2          &kp F3       &kp F4           ___                 ___         &kp HOME      &kp UP       &kp END      &kp PG_UP       ___
//├──────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤      ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────┤
        ___      &hml LGUI F5 &hml LALT F6   &hml LSHFT F7 &hml LCTRL F8   ___                 ___         &kp LEFT      &kp DOWN     &kp RIGHT    &kp PG_DN       ___
//├──────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤      ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────┤
        ___      &kp F9      &kp F10         &kp F11      &kp F12          ___ &kp &none &none ___            ___           ___           ___          ___      &kp INS
//╰──────────┴─────────────┼─────────────┴─────────────┼─────────────┼─────────────┤      ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────┴─────────╯
                                                         &kp LGUI &kp 1 &kp SPACE            &kp SPACE &mo 2 &kp DOT
//                                                     ╰─────────┴───────┴─────────╯      ╰───────────┴─────┴─────────╯
)

// / {
//     keymap {
//         compatible = "zmk,keymap";

//         default_layer {
//             display-name = "base";
//             sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;

// // -------------------------------------------------------------------------------------------------
// // | TAB  |  Q  |  W  |  F  |  P  |  G  |                    |  J  |  L   |  U  |  Y  |  ;  | BKSP |
// // | CTRL |  A  |  R  |  S  |  T  |  D  |                    |  H  |  N   |  E  |  I  |  O  |  '   |
// // | SHFT |  Z  |  X  |  C  |  V  |  B  |        |  |        |  K  |  M   |  ,  |  .  |  /  | ESC  |
// //                    | GUI | LWR | SPC |                    | ENT | RSE  | ALT |
//             bindings = <
// &kp ESC &kp Q &kp W &kp F    &kp P &kp G                      &kp J   &kp L &kp U     &kp Y   &kp SEMI  &kp BSPC
// &kp TAB &kp A &kp R &kp S    &kp T &hml LCTRL D                      &kp H   &kp N &kp E     &kp I   &kp O     &kp SQT
// &kp LSHFT &kp Z &kp X &kp C    &kp V &kp B    &kp &none &none &kp K   &kp M &kp COMMA &kp DOT &kp FSLH &kp RET
//                       &kp LGUI &mo 1 &kp SPACE                &kp SPACE &mo 2 &kp LALT
//             >;
//         };

//         lower_layer {
//             display-name = "lower";
//             sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;

// // ------------------------------------------------------------------------------------------------
// // |  TAB |  1  |  2  |  3  |  4  |  5  |                    |  6  |  7  |  8  |  9  |  0  | BKSP |
// // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |                    | LFT | DWN |  UP | RGT |     |  F12 |
// // | SHFT | F1  | F2  | F3  | F4  | F5  |  boot  |  |        |  F6 | F7  | F8  | F9  | F10 |  F11 |
// //                    | GUI |     | SPC |                    | ENT |     | ALT |
//             bindings = <
// &kp TAB    &kp N1       &kp N2       &kp N3       &kp N4       &kp N5                         &kp N6   &kp N7   &kp N8 &kp N9    &kp N0  &kp BSPC
// &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4                   &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans  &kp F12
// &kp LSHFT  &kp F1       &kp F2       &kp F3       &kp F4       &kp F5       &bootloader &none &kp F6   &kp F7   &kp F8 &kp F9    &kp F10 &kp F11
//                                      &kp LGUI     &trans       &kp SPACE                      &kp RET  &trans   &kp LALT
//             >;
//         };

//         raise_layer {
//             display-name = "raise";
//             sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;

// // ------------------------------------------------------------------------------------------------
// // |  TAB |  !  |  @  |  #  |  $  |  %  |                    |  ^  |  &  |  *  |  (  |  )  | BKSP |
// // | CTRL |     |     |     |     |     |                    |  -  |  =  |  [  |  ]  |  \  |  `   |
// // | SHFT |     |     |     |     |     |        |  |  boot  |  _  |  +  |  {  |  }  | "|" |  ~   |
// //                    | GUI |     | SPC |                    | ENT |     | ALT |
//             bindings = <
// &kp TAB   &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT                   &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &kp BSPC
// &kp LCTRL &trans   &trans &trans   &trans   &trans                      &kp MINUS &kp EQUAL &kp LBKT        &kp RBKT &kp BSLH &kp GRAVE
// &kp LSHFT &trans   &trans &trans   &trans   &trans    &none &bootloader &kp UNDER &kp PLUS  &kp LBRC        &kp RBRC &kp PIPE &kp TILDE
//                           &kp LGUI &trans   &kp SPACE                   &kp RET   &trans    &kp LALT
//             >;
//         };

//         extra1 {
//             display-name = "extra1";
//             status = "reserved";
//         };

//         extra2 {
//             display-name = "extra2";
//             status = "reserved";
//         };
//     };
// };

// /{ chosen { zmk,physical-layout = &corne_xiao_6col_layout; }; };
